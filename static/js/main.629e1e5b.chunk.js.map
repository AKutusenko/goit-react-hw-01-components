{"version":3,"sources":["components/profile/Profile.module.css","components/transactionHistory/TransactionHistory.module.css","components/friend-list/FriendList.module.css","components/statistics/Statistics.module.css","components/container/Container.module.css","images/default.png","components/container/Container.js","components/profile/Profile.js","components/statistics/Statistics.js","components/friend-list/FriendList.js","components/transactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","Profile","name","tag","location","avatar","defaultImage","stats","profile","description","src","alt","statsItem","label","quantity","followers","views","likes","Statistics","title","statistics","statList","map","statsListItem","style","backgroundColor","getColor","percentage","id","color","i","Math","floor","random","FriendList","friends","friend","item","status","getOnlineStatus","isOnline","width","defaultProps","TransactionHistory","items","transactionHistory","tr","td","type","amount","currency","App","user","statisticalData","friendListData","transactionData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.629e1e5b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3WF1B\",\"description\":\"Profile_description__ZE093\",\"name\":\"Profile_name__3nonE\",\"tag\":\"Profile_tag__2l1WY\",\"location\":\"Profile_location__3z6Pi\",\"stats\":\"Profile_stats__UOX5R\",\"avatar\":\"Profile_avatar__2K9kP\",\"statsItem\":\"Profile_statsItem__1eNiI\",\"label\":\"Profile_label__3HlfI\",\"quantity\":\"Profile_quantity__2e3tD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__1SeY7\",\"tr\":\"TransactionHistory_tr__3Hvgb\",\"td\":\"TransactionHistory_td__1cGww\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendList_item__2EUvg\",\"status\":\"FriendList_status__1pOs3\",\"avatar\":\"FriendList_avatar__14O0F\",\"name\":\"FriendList_name__3MmU_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statList\":\"Statistics_statList__3iWBa\",\"statsListItem\":\"Statistics_statsListItem__3e2PN\",\"statistics\":\"Statistics_statistics__QVLAH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__191Zr\"};","export default __webpack_public_path__ + \"static/media/default.7642358d.png\";","import s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n","import PropTypes from 'prop-types';\nimport defaultImage from '../../images/default.png';\nimport s from './Profile.module.css';\nimport Container from '../container/Container';\n\nexport default function Profile({\n  name,\n  tag,\n  location,\n  avatar = defaultImage,\n  stats,\n}) {\n  return (\n    <Container>\n      <div className={s.profile}>\n        <div className={s.description}>\n          <img src={avatar} alt={name} className={s.avatar} />\n          <p className={s.name}>{name}</p>\n          <p className={s.tag}>{tag}</p>\n          <p className={s.location}>{location}</p>\n        </div>\n\n        <ul className={s.stats}>\n          <li className={s.statsItem}>\n            <span className={s.label}>Followers</span>\n            <span className={s.quantity}>{stats.followers}</span>\n          </li>\n          <li className={s.statsItem}>\n            <span className={s.label}>Views</span>\n            <span className={s.quantity}>{stats.views}</span>\n          </li>\n          <li className={s.statsItem}>\n            <span className={s.label}>Likes</span>\n            <span className={s.quantity}>{stats.likes}</span>\n          </li>\n        </ul>\n      </div>\n    </Container>\n  );\n}\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.object.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Container from '../container/Container';\nimport s from './Statistics.module.css';\n\nexport default function Statistics({ title, stats }) {\n  return (\n    <Container>\n      <section className={s.statistics}>\n        {title && <h2 className=\"title\">{title}</h2>}\n        <ul className={s.statList}>\n          {stats.map(statsItem => {\n            return (\n              <li\n                className={s.statsListItem}\n                key={statsItem.id}\n                style={{ backgroundColor: getColor() }}\n              >\n                <span className=\"label\">{statsItem.label}</span>\n                <span className=\"percentage\">{statsItem.percentage}%</span>\n              </li>\n            );\n          })}\n        </ul>\n      </section>\n    </Container>\n  );\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nfunction getColor() {\n  let letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n","import PropTypes from 'prop-types';\nimport Container from '../container/Container';\nimport s from './FriendList.module.css';\n\nexport default function FriendList({ friends = [] }) {\n  return (\n    <Container>\n      <ul className=\"friend-list\">\n        {friends.map(friend => {\n          return (\n            <li className={s.item} key={friend.id}>\n              <span\n                className={s.status}\n                style={{ backgroundColor: getOnlineStatus(friend.isOnline) }}\n              ></span>\n              <img\n                className={s.avatar}\n                src={friend.avatar}\n                alt={friend.name}\n                width=\"48\"\n              />\n              <p className={s.name}>{friend.name}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </Container>\n  );\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nFriendList.defaultProps = {\n  avatar: '../../images/default.png',\n  name: 'Not enough information',\n  isOnline: false,\n};\n\nfunction getOnlineStatus(status) {\n  let color = '';\n  status ? (color = 'green') : (color = 'red');\n  return color;\n}\n","import PropTypes from 'prop-types';\nimport Container from '../container/Container';\nimport s from './TransactionHistory.module.css';\n\nexport default function TransactionHistory({ items }) {\n  return (\n    <Container>\n      <table className={s.transactionHistory}>\n        <thead>\n          <tr>\n            <th>Type</th>\n            <th>Amount</th>\n            <th>Currency</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {items.map(item => {\n            return (\n              <tr key={item.id} className={s.tr}>\n                <td className={s.td}>{item.type}</td>\n                <td className={s.td}>{item.amount}</td>\n                <td className={s.td}>{item.currency}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </Container>\n  );\n}\n\nTransactionHistory.propTypes = {\n  id: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n};\n\nTransactionHistory.defaultProps = {\n  type: 'Type not found',\n  amount: 'Amount not found',\n  currency: 'Currency not found',\n};\n","import Profile from './components/profile/Profile';\nimport user from './components/profile/user.json';\nimport Statistics from './components/statistics/Statistics';\nimport statisticalData from './components/statistics/statistical-data.json';\nimport FriendList from './components/friend-list/FriendList';\nimport friendListData from './components/friend-list/friends.json';\nimport TransactionHistory from './components/transactionHistory/TransactionHistory';\nimport transactionData from './components/transactionHistory/transactions.json';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <FriendList friends={friendListData} />\n      <TransactionHistory items={transactionData} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}